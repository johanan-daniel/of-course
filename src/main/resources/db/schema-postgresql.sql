CREATE TABLE IF NOT EXISTS Users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
	name VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS Company (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	careers_url VARCHAR(500)
);

CREATE TABLE IF NOT EXISTS US_State (
	id CHAR(2) PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Location (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	city VARCHAR(100) NOT NULL,
	state_id CHAR(2) NOT NULL,
	CONSTRAINT fk_state_id FOREIGN KEY (state_id) REFERENCES US_State(id)
);



CREATE TABLE IF NOT EXISTS Skill_Group (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	label VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Skill (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	label VARCHAR(100) NOT NULL UNIQUE
--	group_id INTEGER,
--	CONSTRAINT fk_group_id FOREIGN KEY (id) REFERENCES Skill_Group(id)
);

CREATE TABLE IF NOT EXISTS Status (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	label VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Interview_Stage (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	label VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Level (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	label VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Job (
	id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	user_id INTEGER NOT NULL,
	title VARCHAR(100) NOT NULL,
	company_id INTEGER NOT NULL,
	status_id INTEGER NOT NULL,
	interview_stage_id INTEGER NOT NULL,
	level_id INTEGER NOT NULL,
	years_exp INTEGER DEFAULT 0,
	description TEXT,
	date_applied DATE NOT NULL,
	first_response DATE,
	cover_letter boolean DEFAULT FALSE,
	applied_early boolean DEFAULT FALSE,
	masters_preferred boolean DEFAULT FALSE,
	qualified boolean DEFAULT FALSE,
	FOREIGN KEY (user_id) REFERENCES Users(id),
	FOREIGN KEY (company_id) REFERENCES Company(id),
	FOREIGN KEY (status_id) REFERENCES Status(id),
	FOREIGN KEY (interview_stage_id) REFERENCES Interview_Stage(id),
	FOREIGN KEY (level_id) REFERENCES Level(id)
);


CREATE TABLE IF NOT EXISTS job_located_in (
	job_id INTEGER,
	location_id INTEGER,
	PRIMARY KEY (job_id, location_id),
	CONSTRAINT fk_job_id FOREIGN KEY (job_id) REFERENCES Job(id),
	CONSTRAINT fk_location_id FOREIGN KEY (location_id) REFERENCES Location(id)
);

CREATE TABLE IF NOT EXISTS job_has_skill (
	job_id INTEGER,
	skill_id INTEGER,
	PRIMARY KEY (job_id, skill_id),
	CONSTRAINT fk_job_id FOREIGN KEY (job_id) REFERENCES Job(id),
	CONSTRAINT fk_skill_id FOREIGN KEY (skill_id) REFERENCES Skill(id)
);

CREATE TABLE IF NOT EXISTS user_has_skill (
	user_id INTEGER,
	skill_id INTEGER,
	PRIMARY KEY (user_id, skill_id),
	CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES Users(id),
	CONSTRAINT fk_skill_id FOREIGN KEY (skill_id) REFERENCES Skill(id)
);

CREATE TABLE IF NOT EXISTS skill_grouped_with (
	skill_id INTEGER,
	skill_group_id INTEGER,
	PRIMARY KEY (skill_id, skill_group_id),
	CONSTRAINT fk_skill_id FOREIGN KEY (skill_id) REFERENCES Skill(id),
	CONSTRAINT fk_skill_group_id FOREIGN KEY (skill_group_id) REFERENCES Skill_Group(id)
);